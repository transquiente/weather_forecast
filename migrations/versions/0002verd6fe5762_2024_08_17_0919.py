"""

Revision ID: 0002verd6fe5762
Revises: 0001ver4119669e
Create Date: 2024-08-17 09:19:07.046716+00:00

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "0002verd6fe5762"
down_revision: str | None = "0001ver4119669e"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    weather_data_type = sa.Enum("CURRENT_CONDITION", "FORECAST_CONDITION", name="weather_data_type")
    precipitation_type = sa.Enum("RAIN", "SNOW", "ICE", "MIXED", name="precipitation_type")
    precipitation_intensity = sa.Enum("LIGHT", "MODERATE", "HEAVY", name="precipitation_intensity")
    temperature_unit = sa.Enum("CELSIUS", "FAHRENHEIT", "KELVIN", name="temperature_unit")
    wind_speed_unit = sa.Enum(
        "KILOMETERS_PER_HOUR", "MILES_PER_HOUR", "METERS_PER_SECOND", "KNOTS", name="wind_speed_unit"
    )
    wind_direction = sa.Enum(
        "NORTH",
        "NORTH_NORTHEAST",
        "NORTHEAST",
        "EAST_NORTHEAST",
        "EAST",
        "EAST_SOUTHEAST",
        "SOUTHEAST",
        "SOUTH_SOUTHEAST",
        "SOUTH",
        "SOUTH_SOUTHWEST",
        "SOUTHWEST",
        "WEST_SOUTHWEST",
        "WEST",
        "WEST_NORHTWEST",
        "NORTHWEST",
        "NORTH_NORTHWEST",
        name="wind_direction",
    )
    precipitation_unit = sa.Enum("CM", "MM", name="precipitation_unit")
    solar_irradiance_unit = sa.Enum("WATT_PER_SQUARE_METRE", name="solar_irradiance_unit")
    op.create_table(
        "weather_condition",
        sa.Column("id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False),
        sa.Column("location_id", sa.Uuid(), nullable=False),
        sa.Column("data_type", weather_data_type, nullable=False),
        sa.Column("date_time", sa.DateTime(), nullable=False),
        sa.Column("weather_text", sa.String(), nullable=True),
        sa.Column("has_precipitation", sa.Boolean(), nullable=False),
        sa.Column("precipitation_type", precipitation_type, nullable=True),
        sa.Column("precipitation_intensity", precipitation_intensity, nullable=True),
        sa.Column("temperature_value", sa.Numeric(), nullable=False),
        sa.Column("temperature_unit", temperature_unit, nullable=False),
        sa.Column("real_feel_temperature_value", sa.Numeric(), nullable=False),
        sa.Column("real_feel_temperature_unit", temperature_unit, nullable=False),
        sa.Column("wind_speed_value", sa.Numeric(), nullable=False),
        sa.Column("wind_speed_unit", wind_speed_unit, nullable=False),
        sa.Column("wind_direction_degrees", sa.Integer(), nullable=False),
        sa.Column("wind_direction_name", wind_direction, nullable=False),
        sa.Column("relative_humidity", sa.Integer(), nullable=True),
        sa.Column("u_v_index", sa.Integer(), nullable=True),
        sa.Column("u_v_index_text", sa.String(), nullable=True),
        sa.Column("rain_probability", sa.Integer(), nullable=True),
        sa.Column("snow_probability", sa.Integer(), nullable=True),
        sa.Column("ice_probability", sa.Integer(), nullable=True),
        sa.Column("rain_value", sa.Numeric(), nullable=True),
        sa.Column("rain_unit", precipitation_unit, nullable=True),
        sa.Column("snow_value", sa.Numeric(), nullable=True),
        sa.Column("snow_unit", precipitation_unit, nullable=True),
        sa.Column("ice_value", sa.Numeric(), nullable=True),
        sa.Column("ice_unit", precipitation_unit, nullable=True),
        sa.Column("cloud_cover", sa.Integer(), nullable=True),
        sa.Column("solar_irradiance_value", sa.Numeric(), nullable=True),
        sa.Column("solar_irradiance_unit", solar_irradiance_unit, nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"], name="weather_location_id_fkey", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_weather_condition")),
    )
    op.create_index(op.f("ix_weather_condition_date_time"), "weather_condition", ["date_time"], unique=False)
    op.create_index(op.f("ix_weather_condition_location_id"), "weather_condition", ["location_id"], unique=False)
    op.add_column("location", sa.Column("location_key", sa.String(), nullable=True))
    op.add_column("location", sa.Column("latitude", sa.Numeric(), nullable=True))
    op.add_column("location", sa.Column("longitude", sa.Numeric(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("location", "longitude")
    op.drop_column("location", "latitude")
    op.drop_column("location", "location_key")
    op.drop_index(op.f("ix_weather_condition_location_id"), table_name="weather_condition")
    op.drop_index(op.f("ix_weather_condition_date_time"), table_name="weather_condition")
    op.drop_table("weather_condition")
    op.execute("DROP TYPE solar_irradiance_unit")
    op.execute("DROP TYPE precipitation_unit")
    op.execute("DROP TYPE wind_direction")
    op.execute("DROP TYPE wind_speed_unit")
    op.execute("DROP TYPE temperature_unit")
    op.execute("DROP TYPE precipitation_intensity")
    op.execute("DROP TYPE precipitation_type")
    op.execute("DROP TYPE weather_data_type")
    # ### end Alembic commands ###
