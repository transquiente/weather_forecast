[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = ["Edhar Strelchanka <strelchenkoedgar@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.1"
sqlalchemy = "^2.0.31"
pydantic = "^2.8.2"
alembic = "^1.13.2"
pytest = "^8.2.2"
pytest-factoryboy = "^2.7.0"
pre-commit = "^3.7.1"
pytest-mock = "^3.14.0"
coverage = "^7.6.0"
pydantic-extra-types = "^2.9.0"
uvicorn = "^0.30.3"
mypy = "^1.11.0"
ruff = "^0.6.5"
pre-commit-hooks = "^4.6.0"
pydantic-settings = "^2.3.4"
psycopg2-binary = "^2.9.9"
alembic-utils = "^0.8.4"
alembic-postgresql-enum = "^1.3.0"
httpx = "^0.27.0"
yarl = "^1.9.7"
sqlalchemy-utils = "^0.41.2"
pytest-cov = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
exclude = [".venv", "tests"]
# Untyped definitions and calls
check_untyped_defs = true
# None and Optional handling
implicit_optional = true
strict_optional = true
# Configuring warnings
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_return_any = true
warn_unreachable = true
# Miscellaneous strictness flags
allow_redefinition = false
strict_equality = true
strict_concatenate = false
# Configuring error messages
show_error_codes = true
show_column_numbers = true
show_error_code_links = true
pretty = true
# questionable
disable_error_code = ["misc"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]

[tool.coverage.run]
relative_files = true
source = ["app"]
branch = true

[tool.coverage.report]
skip_empty = true
show_missing = true
exclude_lines = ["raise NotImplementedError", "if TYPE_CHECKING:"]

[tool.ruff]
indent-width = 4
line-length = 120
target-version = "py310"
exclude = [
    ".venv",
    ".git",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults (FastAPI uses this pattern)
]

[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in __init__.py files
"__init__.py" = ["E402", "F401"]

[tool.ruff.lint.isort]
known-first-party = ["app", "tools"]

[tool.ruff.lint.pylint]
max-args = 5
max-locals = 15
max-nested-blocks = 5
max-public-methods = 20
max-returns = 6
max-statements = 50

[tool.ruff.format]
quote-style="double"
docstring-code-format = true
docstring-code-line-length = 120
